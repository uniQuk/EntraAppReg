<#
.SYNOPSIS
    Creates an output folder for storing credentials and reports.

.DESCRIPTION
    The New-EntraAppOutputFolder function creates a folder for storing credentials, certificates,
    and reports generated by the EntraAppReg module. It ensures that the folder exists and has
    the proper permissions.

.PARAMETER Path
    The path where the output folder should be created. If not specified, the default output path will be used.

.PARAMETER FolderName
    The name of the folder to create. If not specified, a default name will be generated based on the current date.

.PARAMETER CreateSubfolders
    When specified, creates standard subfolders for credentials, certificates, and reports.

.EXAMPLE
    New-EntraAppOutputFolder
    Creates a default output folder in the current location.

.EXAMPLE
    New-EntraAppOutputFolder -Path "C:\Temp" -FolderName "EntraAppData" -CreateSubfolders
    Creates a folder named "EntraAppData" in C:\Temp with subfolders for credentials, certificates, and reports.

.NOTES
    This function is used by other functions in the EntraAppReg module that need to save files.
#>
function New-EntraAppOutputFolder {
    [CmdletBinding()]
    [OutputType([string])]
    param (
        [Parameter(Mandatory = $false)]
        [string]$Path,

        [Parameter(Mandatory = $false)]
        [string]$FolderName,

        [Parameter(Mandatory = $false)]
        [switch]$CreateSubfolders
    )

    begin {
        # Use default path if not specified
        if (-not $Path) {
            $Path = $script:DefaultOutputPath
        }

        # Generate default folder name if not specified
        if (-not $FolderName) {
            $dateString = Get-Date -Format "yyyyMMdd-HHmmss"
            $FolderName = "EntraAppReg_$dateString"
        }

        # Combine path and folder name
        $fullPath = Join-Path -Path $Path -ChildPath $FolderName
    }

    process {
        try {
            # Create the main folder if it doesn't exist
            if (-not (Test-Path -Path $fullPath)) {
                New-Item -Path $fullPath -ItemType Directory -Force | Out-Null
                Write-Verbose "Created output folder: $fullPath"
            } else {
                Write-Verbose "Output folder already exists: $fullPath"
            }

            # Create subfolders if requested
            if ($CreateSubfolders) {
                $subfolders = @("Credentials", "Certificates", "Reports")
                foreach ($subfolder in $subfolders) {
                    $subfolderPath = Join-Path -Path $fullPath -ChildPath $subfolder
                    if (-not (Test-Path -Path $subfolderPath)) {
                        New-Item -Path $subfolderPath -ItemType Directory -Force | Out-Null
                        Write-Verbose "Created subfolder: $subfolderPath"
                    } else {
                        Write-Verbose "Subfolder already exists: $subfolderPath"
                    }
                }
            }

            # Return the full path
            return $fullPath
        }
        catch {
            Write-Error "Failed to create output folder: $_"
            return $null
        }
    }
}
